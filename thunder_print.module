<?php

/**
 * @file
 * Contains thunder_print.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\thunder_print\Entity\PrintArticleInterface;
use Drupal\thunder_print\Entity\PrintArticleTypeInterface;
use Drupal\views\Render\ViewsRenderPipelineMarkup;

/**
 * Implements hook_help().
 */
function thunder_print_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the thunder_print module.
    case 'help.page.thunder_print':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_operation().
 */
function thunder_print_entity_operation(EntityInterface $entity) {

  $operations = [];
  if ($entity instanceof PrintArticleTypeInterface) {
    if ($entity->status()) {
      $operations['disable'] = [
        'title' => t('Disable'),
        'url' => Url::fromRoute('thunder_print.print_article_type.toggleStatus', ['print_article_type' => $entity->id()]),
        'weight' => 40,
      ];
    }
    else {
      $operations['enable'] = [
        'title' => t('Enable'),
        'url' => Url::fromRoute('thunder_print.print_article_type.toggleStatus', ['print_article_type' => $entity->id()]),
        'weight' => 40,
      ];
    }
    $operations['download_idms'] = [
      'title' => t('Download IDMS'),
      'url' => Url::fromRoute('thunder_print.print_article_type.downloadIdms', ['print_article_type' => $entity->id()]),
      'weight' => 30,
    ];
  }
  elseif ($entity instanceof PrintArticleInterface) {
    $operations['download_idms'] = [
      'title' => t('Download IDMS'),
      'url' => Url::fromRoute('thunder_print.print_article.downloadIdms', ['print_article' => $entity->id()]),
      'weight' => 30,
    ];
  }

  return $operations;
}

/**
 * Implements hook_entity_operation_alter().
 */
function thunder_print_entity_operation_alter(array &$operations, EntityInterface $entity) {

  if ($entity instanceof PrintArticleTypeInterface) {

    /** @var \Drupal\thunder_print\Entity\PrintArticleTypeInterface $entity */
    if ($entity->getEntityCount()) {
      unset($operations['delete']);
    }
  }
}

/**
 * Implements hook_preprocess_views_view_field().
 */
function thunder_print_preprocess_views_view_field(&$variables) {

  /** @var \Drupal\views\ViewExecutable $view */
  $view = $variables['view'];
  if ($view->id() == 'thunder_print_snippet_templates') {
    /** @var \Drupal\thunder_print\Entity\PrintArticleTypeInterface $entity */
    $entity = $variables['row']->entity;
    if ($variables['field']->field_alias == 'thumbnail_uuid') {
      if ($thumbnail_url = $entity->getThumbnailUrl()) {
        $variables['output'] = [
          '#theme' => 'image',
          '#uri' => $thumbnail_url,
          '#height' => 50,
        ];
      }
    }
    elseif ($variables['field']->field_alias == 'status') {
      if ($entity->status()) {
        $variables['output'] = ViewsRenderPipelineMarkup::create('Enabled');
      }
      else {
        $variables['output'] = ViewsRenderPipelineMarkup::create('Disabled');
      }
    }
  }

}
