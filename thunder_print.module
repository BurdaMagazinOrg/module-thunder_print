<?php

/**
 * @file
 * Contains thunder_print.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\thunder_print\Entity\PrintArticleInterface;
use Drupal\thunder_print\Entity\PrintArticleTypeInterface;

/**
 * Implements hook_help().
 */
function thunder_print_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the thunder_print module.
    case 'help.page.thunder_print':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_operation().
 */
function thunder_print_entity_operation(EntityInterface $entity) {

  $operations = [];
  if ($entity instanceof PrintArticleTypeInterface) {
    if ($entity->status()) {
      $operations['disable'] = [
        'title' => t('Disable'),
        'url' => Url::fromRoute('thunder_print.print_article_type.toggleStatus', ['print_article_type' => $entity->id()]),
        'weight' => 40,
      ];
    }
    else {
      $operations['enable'] = [
        'title' => t('Enable'),
        'url' => Url::fromRoute('thunder_print.print_article_type.toggleStatus', ['print_article_type' => $entity->id()]),
        'weight' => 40,
      ];
    }
    $operations['download_idms'] = [
      'title' => t('Download IDMS'),
      'url' => Url::fromRoute('thunder_print.print_article_type.downloadIdms', ['print_article_type' => $entity->id()]),
      'weight' => 30,
    ];
  }
  elseif ($entity instanceof PrintArticleInterface) {
    $operations['download_idms'] = [
      'title' => t('Download IDMS'),
      'url' => Url::fromRoute('thunder_print.print_article.downloadIdms', ['print_article' => $entity->id()]),
      'weight' => 30,
    ];
  }

  return $operations;
}

/**
 * Implements hook_entity_operation_alter().
 */
function thunder_print_entity_operation_alter(array &$operations, EntityInterface $entity) {

  if ($entity instanceof PrintArticleTypeInterface) {

    /** @var \Drupal\thunder_print\Entity\PrintArticleTypeInterface $entity */
    if ($entity->getEntityCount()) {
      unset($operations['delete']);
    }
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function thunder_print_field_widget_text_textarea_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
  /** @var \Drupal\Core\Field\FieldItemListInterface $items */
  $items = $context['items'];
  $field_name = $items->getFieldDefinition()->getName();
  $bundle = $items->getFieldDefinition()->getTargetBundle();
  $type = $items->getFieldDefinition()->getTargetEntityTypeId();

  $element['#thunder_print'] = [
    'field' => $field_name,
    'bundle' => $bundle,
    'type' => $type,
    'styles' => [
      'idms-span1' => [
        'element' => 'span',
        'attributes' => ['class' => 'idms-span1', 'style' => 'color: red'],
      ],
      'idms-block1' => [
        'element' => 'p',
        'attributes' => ['class' => 'idms-block1', 'style' => 'background: yellow'],
      ],
      'idms-block2' => [
        'element' => 'p',
        'attributes' => ['class' => 'idms-block2'],
      ],
    ]
  ];
}

/**
 * Implements hook_element_info_alter().
 */
function thunder_print_element_info_alter(&$types) {
  $types['text_format']['#pre_render'][] = 'thunder_print_pre_render_text_format';
}

/**
 * Pre render callback for text format elements to add IDMSStyle information.
 *
 * @param array $element
 *   Form element to adjust.
 * @return array
 *   Altered element.
 */
function thunder_print_pre_render_text_format(array $element) {
  if (empty($element['#thunder_print'])) {
    return $element;
  }

  $field_id = $element['value']['#id'];
  $element['#attached']['drupalSettings']['thunder_print']['idmsstyle'][$field_id] = $element['#thunder_print']['styles'];
  return $element;
}
